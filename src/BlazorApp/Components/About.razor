<section class="dark" id="about">


    @if (jpgImage is not null)
    {
    @*     <img class="background" src="@(jpgImage.Src)" alt="@(jpgImage.Alt)" /> *@
    }

    <div class="w3-container">

        <div class="w3-padding-32 ">
            @if (aboutMe is null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {

                <div class="w3-row ">
                    <div class="w3-third  w3-card-4  w3-margin-top ">
                        @if (pgImage is not null)
                        {
                            <img src="@(pgImage.Src)" style="height: 90%; width: 100%;"
                                 alt="@(pgImage.Alt)" />
                        }
                    </div>
                    <div class="w3-third w3-padding-32 ">
                        <h2 class="w3-mobile">@aboutMe.AboutTitle</h2>
                        <p class="w3-mobile">@aboutMe.Description</p>
                    </div>
                    <div class="w3-third w3-padding-32 ">
                        <h2>Skills</h2>
                        <ul style="columns: 2; list-style-type:disc" class="w3-margin">
                            @foreach (var skill in aboutMe.Skills)
                            {
                                <li key="@skill"><p>@skill</p></li>
                            }
                        </ul>
                    </div>
                </div>
                <p style="padding: 1rem 3rem 0;">@aboutMe.DetailOrQuote</p>
            }
        </div>
    </div>

</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private AboutMe? aboutMe;
    private HeroImage? jpgImage;
    private HeroImage? pgImage;

    protected override async Task OnInitializedAsync()
    {
        aboutMe = await Http.GetFromJsonAsync<AboutMe>("sample-data/aboutme.json");
        jpgImage = await HeroImageService.GetHeroAsync(img => img.Name is "about");
        pgImage = await HeroImageService.GetHeroAsync(img => img.Name == "portfolio");

    }
}
